name: Check source code and push created image based on sources

on:
  push:
    paths-ignore:
      - 'docs/**'
      - '**.md'

  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**.md'

  workflow_dispatch:

jobs:
  check-code:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.6
      uses: actions/setup-python@v1
      with:
        python-version: 3.6

    - name: Lint with flake8
      run: |
        pip install flake8 flake8-bugbear flake8-comprehensions mccabe
        flake8 src/ --statistic --max-line-length=100 --max-complexity 15 -qq

  docker-build-test-autotest:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Provide environment variable for autotests
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
          echo "ACCESS_TOKEN=${ACCESS_TOKEN}" > .env

      - name: Create base docker image and run tests in the docker container based on it and autotests
        run: |
          make docker-base-image
          make docker-test
          make docker-autotest

      - name: Get current util version
        id: get_version
        run: |
          echo "::set-output name=version::$(grep --max-count 1 UTIL_VERSION Makefile | grep -Eo "[0-9]+[.][0-9]+[.][0-9]+")"

      - name: Create main docker image and save it for next job
        run: |
          make docker-image DOCKER_TAG=${{ secrets.DOCKER_HUB_USERNAME }}/codeplag-ubuntu18.04:${{ steps.get_version.outputs.version }}
          docker image save --output /tmp/codeplag-ubuntu18.04.tar ${{ secrets.DOCKER_HUB_USERNAME }}/codeplag-ubuntu18.04:${{ steps.get_version.outputs.version }}

      - name: Upload created image
        uses: actions/upload-artifact@v3
        with:
          name: codeplag-ubuntu18.04
          path: /tmp/codeplag-ubuntu18.04.tar

  push-image:
    runs-on: ubuntu-18.04
    needs: [check-code, docker-build-test-autotest]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download created in the previous stage image
        uses: actions/download-artifact@v3
        with:
          name: codeplag-ubuntu18.04
          path: /tmp

      - name: Get current util version
        id: get_version
        run: |
          echo "::set-output name=version::$(grep --max-count 1 UTIL_VERSION Makefile | grep -Eo "[0-9]+[.][0-9]+[.][0-9]+")"

      - name: Load Docker created image
        run: |
          docker load --input /tmp/codeplag-ubuntu18.04.tar
          docker image tag ${{ secrets.DOCKER_HUB_USERNAME }}/codeplag-ubuntu18.04:${{ steps.get_version.outputs.version }} ${{ secrets.DOCKER_HUB_USERNAME }}/codeplag-ubuntu18.04:latest

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push docker image
        run: docker image push --all-tags ${{ secrets.DOCKER_HUB_USERNAME }}/codeplag-ubuntu18.04
